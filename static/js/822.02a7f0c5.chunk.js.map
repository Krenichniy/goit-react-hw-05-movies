{"version":3,"file":"static/js/822.02a7f0c5.chunk.js","mappings":"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","sources":["components/StyledComponent.js","helpers/FetchData/FetchData.js","pages/MovieById/MovieById.styled.js","pages/MovieById/MovieById.jsx","pages/Movies/Movies.styled.js"],"sourcesContent":["const { default: styled } = require('styled-components');\n\nexport const StyledContainer = styled.div`\n        width:1200px;\n        margin: 0 auto ;\n        padding: 30px 15px;\n`\nexport const StyledCastConatiner = styled.ul`\n        display:flex;\n        flex-wrap:wrap;\n        align-items:center;\n        justify-content:center;\n        margin:0;\n        padding:0;\n`\n\nexport const StyledCastItem = styled.li`\n        display:flex;\n        flex-direction:column;\n        align-items:flex-start;\n        justify-content:center;\n        width:200px;\n        padding:5px;\n        border-radius: 10px;\n        margin-bottom:30px;\n        transform:scale(1);\n        transition: transform 500ms linear;\n        &:hover, &:focus{\n                box-shadow: 0 8px 20px rgba(0,128,128,0.5), 0 20px 25px rgba(0,128,128,0.5);\n                transform:scale(1.1);\n        }\n`","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst API_KEY = '09630d0efe652d6d61bcfe25c1802e1f';\nconst URL = `https://api.themoviedb.org/3`;\nexport  const FetchMovieFromApi = async ( value) => {\n   \n    try {\n        const response = await fetch(`${URL}/movie/${value}?api_key=${API_KEY}&language=en-US`);\n        if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch (error){\n        Notify.failure(error);\n    }\n}\n\nexport const fetchCast = async (value) => {\n    try {\n        const response = await fetch(`${URL}/movie/${value}/credits?api_key=${API_KEY}&language=en-US`);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\n\nexport const fetchReview = async (value) => {\n    try {\n        const response = await fetch(`${URL}/movie/${value}/reviews?api_key=${API_KEY}&language=en-US`);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\nexport const fetchAllVideoLibrary = async () => {\n    try {\n        const response = await fetch(`${URL}/trending/movie/week?api_key=${API_KEY}`);\n        if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\n\nexport const fetchByQuery = async (query) => {\n    try {\n        const response = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-USpage=1&include_adult=false`);\n         if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledNavLink = styled(NavLink)`\n        &:not(:last-child){\n            margin-right:20px;\n        }\n`\nexport const StyledNavContainer = styled.div`\n            display:flex;\n            align-items:center;\n\n`\nexport const StyledCardcontainer = styled.div`\n            max-width:800px;\n            width:100%;\n            display:flex;\n            padding:30px;  \n            \n            & div:first-child{\n                margin-right:30px;\n            }\n`\n\nexport const AdditionalContainer = styled.div`\n \n`","import { useEffect, useState } from \"react\";\nimport {   useLocation, useParams, useNavigate, Outlet } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Loader from 'components/Loader';\nimport { FetchMovieFromApi } from \"helpers/FetchData/FetchData\";\nimport { StyledBtn } from \"pages/Movies/Movies.styled\";\nimport styles from '../../modules/Menu/menu.module.css';\nimport { StyledNavLink, StyledNavContainer, StyledCardcontainer,AdditionalContainer } from \"./MovieById.styled\";\nimport { StyledContainer } from '../../components/StyledComponent';\nimport noPhoto from '../../defaultImage/noPhoto.jpg'\n const MovieById = () => {\n    const { id } = useParams();\n    const [state, setSate] = useState({item:{}});\n    const [isLoading, setIsLoading] = useState(false);\n\n        useEffect(() => {\n        const getMovie = async () => {\n            setIsLoading(true);\n            try {\n                const response = await FetchMovieFromApi(id);\n                setSate(item => ({ item: response }))\n            }\n            catch (error) {\n                Notify.failure(error);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        }\n        getMovie();\n\n        }, [id]);\n    \n    const { title, poster_path, name, overview, release_date, vote_average, genres } = state.item;\n    const dateYears = release_date?.split('').slice(0, 4);\n    const userScore = String(vote_average * 10).slice(0, 2);\n    const location = useLocation();\n    const from = location.state?.from || '/';\n    const navigate = useNavigate();\n    const goBack = () => navigate(from, {replace:false})\n    //   const goBack = () => navigate(-1)\n    return (\n        <StyledContainer>\n            <StyledBtn onClick={goBack} >\n                <span className={styles.link}>\n                    Go Back\n                </span>\n                \n                {/* <Link to={'/'} className={styles.link}></Link> */}\n            </StyledBtn>\n            {isLoading && <Loader />}\n            <StyledCardcontainer>\n                <div>\n                    <h2>{title} ({dateYears})</h2>\n                    <p>User Score : {userScore} %</p>\n                {poster_path ?\n                    <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} width=\"300\" alt={name}  />\n                    :<img src={noPhoto} alt={name} width={300} height={250} />\n                }\n                    \n                </div>\n            {/* description */}\n                <div>\n                    <h3>Overview :</h3>\n                    <p>{overview}</p>\n                    <StyledNavContainer>Genres : <p>{genres?.map(el => el.name).join(' , ')}</p></StyledNavContainer>\n                     {/* additional info */}\n            <AdditionalContainer>\n                <h3>Additional information</h3>\n                <StyledNavContainer>\n                    <StyledNavLink state={{ from }} to='cast' className={styles.link}>Cast</StyledNavLink>\n                    <StyledNavLink state={{ from }} to='reviews' className={styles.link}> Reviews</StyledNavLink>\n                    </StyledNavContainer>\n            </AdditionalContainer>\n                </div>\n            </StyledCardcontainer>\n           \n            <Outlet/>\n        </StyledContainer>\n    )\n}\n\nexport default MovieById;","import styled from \"styled-components\";\n\nexport const StyledBtn = styled.button`\n      background:transparent;\n      border:none;\n      cursor:pointer;\n`"],"names":["styled","require","default","StyledContainer","div","StyledCastConatiner","ul","StyledCastItem","li","API_KEY","URL","FetchMovieFromApi","value","fetch","response","ok","Error","status","json","result","Notify","fetchCast","fetchReview","fetchAllVideoLibrary","fetchByQuery","query","StyledNavLink","NavLink","StyledNavContainer","StyledCardcontainer","AdditionalContainer","id","useParams","useState","item","state","setSate","isLoading","setIsLoading","useEffect","getMovie","title","poster_path","name","overview","release_date","vote_average","genres","dateYears","split","slice","userScore","String","from","useLocation","navigate","useNavigate","onClick","replace","className","styles","Loader","src","width","alt","noPhoto","height","map","el","join","to","StyledBtn"],"sourceRoot":""}