{"version":3,"file":"static/js/199.a68ff464.chunk.js","mappings":"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","sources":["components/StyledComponent.js","helpers/FetchData/FetchData.js","pages/Homepage/Homepage.jsx","pages/Homepage/Homepage.styled.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["const { default: styled } = require('styled-components');\n\nexport const StyledContainer = styled.div`\n        width:1200px;\n        margin: 0 auto ;\n        padding: 30px 15px;\n`\nexport const StyledCastConatiner = styled.ul`\n        display:flex;\n        flex-wrap:wrap;\n        align-items:center;\n        justify-content:center;\n        margin:0;\n        padding:0;\n`\n\nexport const StyledCastItem = styled.li`\n        display:flex;\n        flex-direction:column;\n        align-items:flex-start;\n        justify-content:center;\n        width:200px;\n        padding:5px;\n        border-radius: 10px;\n        margin-bottom:30px;\n        transform:scale(1);\n        transition: transform 500ms linear;\n        &:hover, &:focus{\n                box-shadow: 0 8px 20px rgba(0,128,128,0.5), 0 20px 25px rgba(0,128,128,0.5);\n                transform:scale(1.1);\n        }\n`","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst API_KEY = '09630d0efe652d6d61bcfe25c1802e1f';\nconst URL = `https://api.themoviedb.org/3`;\nexport  const FetchMovieFromApi = async ( value) => {\n   \n    try {\n        const response = await fetch(`${URL}/movie/${value}?api_key=${API_KEY}&language=en-US`);\n        if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch (error){\n        Notify.failure(error);\n    }\n}\n\nexport const fetchCast = async (value) => {\n    try {\n        const response = await fetch(`${URL}/movie/${value}/credits?api_key=${API_KEY}&language=en-US`);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\n\nexport const fetchReview = async (value) => {\n    try {\n        const response = await fetch(`${URL}/movie/${value}/reviews?api_key=${API_KEY}&language=en-US`);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\nexport const fetchAllVideoLibrary = async () => {\n    try {\n        const response = await fetch(`${URL}/trending/movie/week?api_key=${API_KEY}`);\n        if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}\n\nexport const fetchByQuery = async (query) => {\n    try {\n        const response = await fetch(`${URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-USpage=1&include_adult=false`);\n         if (!response.ok) throw new Error(response.status);\n        const result = await response.json();\n        return result;\n    }\n    catch(error) {\n        Notify.failure(error);\n    }\n}","import { useState, useEffect } from 'react';\nimport { fetchAllVideoLibrary } from 'helpers/FetchData/FetchData'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Loader from 'components/Loader';\nimport { StyledLink, StyledMoviesList, StyledItem, StyledTitle } from './Homepage.styled';\nimport { StyledContainer } from '../../components/StyledComponent';\nimport noPhoto from '../../defaultImage/noPhoto.jpg'\n const Homepage = () => {\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetchAllVideoLibrary();\n                setData(data => [...data, ...response.results])\n            }\n            catch (error) {\n                Notify.failure(error);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        }\n        getMovies();\n\n    }, []);\n\n    const movies = data?.map(({id, poster_path, title, name}) => {\n        return <StyledItem key={id}>\n            <StyledLink state={{ from: '/' }} to={`/movies/${id}`}>\n                  {poster_path ?\n                    <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} width=\"200\" height=\"300\" />\n                    :<img src={noPhoto} alt={title} width={200} height={300} />\n                }\n                \n                <StyledTitle > {title || name}</StyledTitle>\n            </StyledLink>\n        </StyledItem>\n    });\n\n    return ( \n           < StyledContainer>\n                <h2>Tranding today</h2>\n                <StyledMoviesList >\n                    {isLoading && <Loader/> }\n                    {movies}\n                    </StyledMoviesList>\n            </StyledContainer>\n    )\n}\n\nexport default Homepage;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const StyledLink = styled(Link)`\n        color:teal;\n        text-decoration:none;\n        &:hover{\n                color:#ff8500de;\n        }\n`\nexport const StyledMoviesList = styled.ul`\n        margin:0;\n        padding:0;\n        list-style:none;\n        display:flex;\n        flex-wrap:wrap;\n        align-items:center;\n        justify-content:center;\n`\nexport const StyledItem = styled.li`\n        display:flex;\n        align-items:center;\n        padding:5px;\n        border-radius: 10px;\n        \n        margin-bottom:30px;\n        transform:scale(1);\n        transition: transform 500ms linear;\n        &:hover, &:focus{\n                box-shadow: 0 8px 20px rgba(0,128,128,0.5), 0 20px 25px rgba(0,128,128,0.5);\n                transform:scale(1.1);\n        }\n`\n\nexport const StyledTitle = styled.p`\n        width:200px;\n`","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["styled","require","default","StyledContainer","div","StyledCastConatiner","ul","StyledCastItem","li","API_KEY","URL","FetchMovieFromApi","value","fetch","response","ok","Error","status","json","result","Notify","fetchCast","fetchReview","fetchAllVideoLibrary","fetchByQuery","query","useState","data","setData","isLoading","setIsLoading","useEffect","getMovies","results","movies","map","id","poster_path","title","name","state","from","to","src","alt","width","height","noPhoto","StyledLink","Link","StyledMoviesList","StyledItem","StyledTitle","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}